package br.com.util.entity;


import java.util.HashSet;
import java.util.Set;

import javax.persistence.*;

import com.fasterxml.jackson.annotation.JsonIgnore;

import io.swagger.annotations.ApiModel;

/**
 * AcessoGrupo generated by hbm2java
 */
@Entity
@Table(name = "acesso_grupo", schema = "suporte")
@SequenceGenerator(name = "acesso_grupo_seq", sequenceName = "suporte.seq_nu_acesso_grupo", allocationSize = 1, initialValue = 1)
@ApiModel(value="AcessoGrupo")
public class AcessoGrupo implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer nuGrupo;
	private String deGrupo;
	private Integer nuGrupoPai;
	private Set<AcessoGrupoFuncionalidade> acessoGrupoFuncionalidades = new HashSet<AcessoGrupoFuncionalidade>();
	@JsonIgnore
	private Set<AcessoUsuario> acessoUsuarios = new HashSet<AcessoUsuario>();

	public AcessoGrupo() {
	}

	public AcessoGrupo(AcessoGrupo acessoGrupo, String deGrupo, Integer nuGrupoPai) {
		this.deGrupo = deGrupo;
		this.nuGrupoPai = nuGrupoPai;
	}

	public AcessoGrupo(AcessoGrupo acessoGrupo, String deGrupo, Integer nuGrupoPai,
			Set<AcessoGrupoFuncionalidade> acessoGrupoFuncionalidades,
			Set<AcessoUsuario> acessoUsuarios) {
		this.deGrupo = deGrupo;
		this.nuGrupoPai = nuGrupoPai;
		this.acessoGrupoFuncionalidades = acessoGrupoFuncionalidades;
		this.acessoUsuarios = acessoUsuarios;
	}
	
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator =  "acesso_grupo_seq")
	@Column(name = "nu_grupo", unique = true, nullable = false, precision = 6, scale = 0)
	public Integer getNuGrupo() {
		return this.nuGrupo;
	}

	public void setNuGrupo(Integer nuGrupo) {
		this.nuGrupo = nuGrupo;
	}

	@Column(name = "de_grupo", nullable = false, length = 30)
	public String getDeGrupo() {
		return this.deGrupo;
	}

	public void setDeGrupo(String descGrupo) {
		this.deGrupo = descGrupo;
	}

	@Column(name = "nu_grupo_pai", nullable = false, precision = 6, scale = 0)
	public Integer getNuGrupoPai() {
		return this.nuGrupoPai;
	}

	public void setNuGrupoPai(Integer nuGrupoPai) {
		this.nuGrupoPai = nuGrupoPai;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "acessoGrupo", cascade= CascadeType.ALL, orphanRemoval=true)
	@JsonIgnore
	public Set<AcessoGrupoFuncionalidade> getAcessoGrupoFuncionalidades() {
		return this.acessoGrupoFuncionalidades;
	}

	public void setAcessoGrupoFuncionalidades(Set<AcessoGrupoFuncionalidade> acessoGrupoFuncionalidades) {
		this.acessoGrupoFuncionalidades = acessoGrupoFuncionalidades;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "acesso_grupo_usuario", schema = "suporte", joinColumns = {
			@JoinColumn(name = "nu_grupo", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "nu_usuario", nullable = false, updatable = false) })
	@JsonIgnore
	public Set<AcessoUsuario> getAcessoUsuarios() {
		return this.acessoUsuarios;
	}

	public void setAcessoUsuarios(Set<AcessoUsuario> acessoUsuarios) {
		this.acessoUsuarios = acessoUsuarios;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((deGrupo == null) ? 0 : deGrupo.hashCode());
		result = prime * result + ((nuGrupo == null) ? 0 : nuGrupo.hashCode());
		result = prime * result + ((nuGrupoPai == null) ? 0 : nuGrupoPai.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		AcessoGrupo other = (AcessoGrupo) obj;
		if (deGrupo == null) {
			if (other.deGrupo != null)
				return false;
		} else if (!deGrupo.equals(other.deGrupo))
			return false;
		if (nuGrupo == null) {
			if (other.nuGrupo != null)
				return false;
		} else if (!nuGrupo.equals(other.nuGrupo))
			return false;
		if (nuGrupoPai == null) {
			if (other.nuGrupoPai != null)
				return false;
		} else if (!nuGrupoPai.equals(other.nuGrupoPai))
			return false;
		return true;
	}
	
}
