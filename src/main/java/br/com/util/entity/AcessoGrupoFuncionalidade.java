package br.com.util.entity;


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Type;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * AcessoGrupoFuncionalidade generated by hbm2java
 */
@Entity
@Table(name = "acesso_grupo_funcionalidade", schema = "suporte")
public class AcessoGrupoFuncionalidade implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private AcessoGrupoFuncionalidadeId id;
	@JsonIgnore
	private AcessoFuncionalidade acessoFuncionalidade;
	@JsonIgnore
	private AcessoGrupo acessoGrupo;
	private Boolean propagavel;

	public AcessoGrupoFuncionalidade() {
	}

	public AcessoGrupoFuncionalidade(AcessoGrupoFuncionalidadeId id, AcessoFuncionalidade acessoFuncionalidade,
			AcessoGrupo acessoGrupo, Boolean propagavel) {
		this.id = id;
		this.acessoFuncionalidade = acessoFuncionalidade;
		this.acessoGrupo = acessoGrupo;
		this.propagavel = propagavel;
	}
	
	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "idGrupo", column = @Column(name = "nu_grupo", nullable = false, precision = 6, scale = 0) ),
			@AttributeOverride(name = "idFuncionalidade", column = @Column(name = "nu_funcionalidade", nullable = false, precision = 6, scale = 0) ) })
	public AcessoGrupoFuncionalidadeId getId() {
		return this.id;
	}

	public void setId(AcessoGrupoFuncionalidadeId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JsonIgnore
	@JoinColumn(name = "nu_funcionalidade", nullable = false, insertable = false, updatable = false)
	public AcessoFuncionalidade getAcessoFuncionalidade() {
		return this.acessoFuncionalidade;
	}

	public void setAcessoFuncionalidade(AcessoFuncionalidade acessoFuncionalidade) {
		this.acessoFuncionalidade = acessoFuncionalidade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JsonIgnore
	@JoinColumn(name = "nu_grupo", nullable = false, insertable = false, updatable = false)
	public AcessoGrupo getAcessoGrupo() {
		return this.acessoGrupo;
	}

	public void setAcessoGrupo(AcessoGrupo acessoGrupo) {
		this.acessoGrupo = acessoGrupo;
	}

	@Type(type="numeric_boolean")
	@Column(name = "ic_propagavel", nullable = false, precision = 1, scale = 0)
	public Boolean isPropagavel() {
		return this.propagavel;
	}

	public void setPropagavel(Boolean propagavel) {
		this.propagavel = propagavel;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((acessoFuncionalidade == null) ? 0 : acessoFuncionalidade.hashCode());
		result = prime * result + ((acessoGrupo == null) ? 0 : acessoGrupo.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((propagavel == null) ? 0 : propagavel.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		AcessoGrupoFuncionalidade other = (AcessoGrupoFuncionalidade) obj;
		if (acessoFuncionalidade == null) {
			if (other.acessoFuncionalidade != null)
				return false;
		} else if (!acessoFuncionalidade.equals(other.acessoFuncionalidade))
			return false;
		if (acessoGrupo == null) {
			if (other.acessoGrupo != null)
				return false;
		} else if (!acessoGrupo.equals(other.acessoGrupo))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (propagavel == null) {
			if (other.propagavel != null)
				return false;
		} else if (!propagavel.equals(other.propagavel))
			return false;
		return true;
	}
	
	

}